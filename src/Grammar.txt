Program := 
  "class" "program" "{" [MethodList] Main "}"

MethodList :=
  MethodList Method | Method

Method :=
  Type Signature ExpressionBlock

Type :=
  "void" | "define"

Signature :=
  Identifier Params

Identifier :=
  /[a-z][\w\d_]*/

Params :=
  "(" Identifier ")" | "(" ")"

ExpressionBlock :=
  "{" ExpressionList "}" | "{" "}"

ExpressionList :=
  ExpressionList Expression | Expression

Expression :=
  Instruction | Call | Return | Empty | If | While | Iterate

Instruction :=
  InstructionIdentifier "(" ")" ";"

InstructionIdentifier :=
  "move" | "turnoff" | "turnleft" | "pickbeeper" | "putbeeper"

Call :=
  Identifier "(" [NumberExpression] ")" ";"

NumberExpression :=
  Identifier | Number | NumberOperator "(" NumberExpression ")"

NumberOperator :=
  "pred" | "succ"

Return :=
  "return" [NumberExpression] ";"

Empty :=
  ";"

If :=
  "if" "(" BooleanExpression ")" Block [Else]

Block :=
  ExpressionBlock | Expression

Else :=
  "else" Block

While :=
  "while" "(" BooleanExpression ")" Block

Iterate :=
  "iterate" "(" NumberExpression ")" Block

BooleanExpression :=
  BooleanUnit | BooleanNegated | BooleanExpression BooleanOperator BooleanExpression

BooleanOperator :=
  "&&" | "||"

BooleanNegated :=
  "!" BooleanUnit

BooleanUnit :=
  "iszero" "(" NumberExpression ")" | Condition | "(" BooleanExpression ")"

Condition :=
  "frontIsClear"
  "frontIsBlock"
  ...
